#!/bin/sh
#
# Slackware build script for ICU
# Copyright (C) 2007-2011 Georgi D. Sotirov <gdsotirov@dir.bg>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# Visit SlackPack at http://sotirov-bg.net/slackpack/
#
# $Id: icu4c.SlackBuild,v 1.11 2011/10/16 16:42:47 gsotirov Exp $
#

. ../../slack-package.conf

NAME=icu
VERSION=4.8
VERSTR=${VERSION//./_}
BUILD=${BUILD:-1}

TMP=${TMP:-/tmp}
CWD=${CWD:-`pwd`}

if [ ! -e $TMP ]; then
  mkdir -p $TMP # location to build the source
fi

SRC=$TMP/$NAME
if [ -e $SRC -a -d $SRC ]; then
  echo "Source directory '$SRC' already exists! Plaese, move it or remove it."
  exit 1
fi

PKG=$TMP/package-$NAME
if [ -e $PKG -a -d $PKG ]; then
  echo "Package creation directory '$PKG' already exists! Please, move it or remove it."
  exit 2
fi
mkdir -p $PKG

# Extract the source
cd $TMP
tar -xvf $CWD/${NAME}4c-${VERSTR}-src.tgz || exit 3
cd $SRC/source
fix_source

# Apply patches
# Segmentation fault from buffer overflow in pkgdata fixed in 4.5.1

# Configure
CFLAGS=$SLKCFLAGS \
CXXFLAGS=$SLKCFLAGS \
./configure --build=$ARCH-slackware-linux \
            --host=$ARCH-slackware-linux \
            --prefix=/usr \
            --sysconfdir=/etc \
            --libdir=/usr/lib${LIBDIRSUFFIX} \
            --mandir=/usr/man \
            --enable-shared=yes \
            --enable-static=no \
            --enable-release \
            --enable-draft \
            --enable-threads \
            --enable-extras \
            --enable-icuio \
            --enable-layout \
            --enable-tests=no \
            --enable-samples=no \
            --disable-rpath \
            --with-data-packaging=files || exit 5

# Build & install
make -j4 || exit 6
make DESTDIR=$PKG install || exit 7

# Prepare
bin_perms $PKG
sbin_perms $PKG
( cd $PKG; strip_bin; strip_lib )
DOCFILES="$DOCFILES license.html readme.html unicode-license.txt"
( cd $SRC; create_docs $PKG $NAME-$VERSION )
( cd $PKG/usr/doc/$NAME-$VERSION
  wget -O COPYING 'http://cgi.w3.org/cgi-bin/html2txt?url=http%3A%2F%2Fsource.icu-project.org%2Frepos%2Ficu%2Ficu4j%2Ftrunk%2Flicense.html'
  wget -O README  'http://cgi.w3.org/cgi-bin/html2txt?url=http%3A%2F%2Fsource.icu-project.org%2Frepos%2Ficu%2Ficu%2Ftrunk%2Freadme.html' )
gzip_man $PKG

mkdir -p $PKG/install
install -m 644 $CWD/slack-desc     $PKG/install/slack-desc
install -m 644 $CWD/slack-required $PKG/install/slack-required

mkdir -p $PKG/usr/src/slackbuilds/$NAME-$VERSION
install -m 644 $CWD/slack-desc                  $PKG/usr/src/slackbuilds/$NAME-$VERSION/slack-desc
install -m 644 $CWD/slack-required              $PKG/usr/src/slackbuilds/$NAME-$VERSION/slack-required
install -m 644 $CWD/$NAME.SlackBuild            $PKG/usr/src/slackbuilds/$NAME-$VERSION/$NAME.SlackBuild

# Assemble
cd $PKG
PKGNAME=$NAME-$VERSION-$ARCH-$BUILD$MYIN
makepkg -l y -c n $PKG_DIR/$PKGNAME.txz
cd $PKG_DIR
md5sum $PKGNAME.txz > $PKGNAME.txz.md5
cat $PKG/install/slack-desc > $PKG_DIR/$PKGNAME.txt

# Clean up
if [ "$1" == "--cleanup" ]; then
  rm -r $SRC
  rm -r $PKG
fi

